x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  bl-geth-init:
    restart: "no"
    build:
      context: ./init
      dockerfile: Dockerfile
    image: init:blast
    pull_policy: never
    environment:
      - SNAPSHOT=${SNAPSHOT:-}
    volumes:
      - blgeth-data:/blast
      - jwtsecret:/blast/ee-secret
      - /etc/localtime:/etc/localtime:ro

  bl-geth:
    restart: "unless-stopped"
    build:
      context: ./bl-geth
      dockerfile: Dockerfile.binary
      args:
        - NETWORK=${NETWORK}
    image: bl-geth:${NETWORK}
    pull_policy: never
    stop_grace_period: 50s
    volumes:
      - blgeth-data:/blast
      - jwtsecret:/blast/ee-secret
      - /etc/localtime:/etc/localtime:ro
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - EL_EXTRAS=${EL_EXTRAS:-}
      - NETWORK=${NETWORK}
    depends_on:
      bl-geth-init:
        condition: service_completed_successfully
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - geth
      - --datadir
      - /blast
      - --http
      - --http.corsdomain=*
      - --http.vhosts=*
      - --http.addr
      - 0.0.0.0
      - --http.port
      - ${RPC_PORT:-8545}
      - --http.api
      - web3,eth,txpool,net
      - --ws
      - --ws.addr
      - 0.0.0.0
      - --ws.port
      - ${WS_PORT:-8546}
      - --ws.origins=*
      - --ws.api
      - eth,txpool,net
      - --authrpc.addr
      - 0.0.0.0
      - --authrpc.port
      - "8551"
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret
      - /blast/ee-secret/jwtsecret
      - --syncmode
      - full
      - --nodiscover
      - --maxpeers
      - "0"
      - --rollup.disabletxpoolgossip
      - --metrics
      - --metrics.expensive
      - --pprof
      - --pprof.addr
      - 0.0.0.0
    labels:
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST:-blast}.service=${RPC_HOST:-blast}
      - traefik.http.routers.${RPC_HOST:-blast}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-blast}.rule=Host(`${RPC_HOST:-blast}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-blast}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST:-blast}lb.service=${RPC_HOST:-blast}
      - traefik.http.routers.${RPC_HOST:-blast}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST:-blast}lb.rule=Host(`${RPC_LB:-blast-lb}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST:-blast}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST:-blast}.loadbalancer.server.port=${RPC_PORT:-8545}
      - traefik.http.routers.${WS_HOST:-blastws}.service=${WS_HOST:-blastws}
      - traefik.http.routers.${WS_HOST:-blastws}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-blastws}.rule=Host(`${WS_HOST:-blastws}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-blastws}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST:-blastws}lb.service=${WS_HOST:-blastws}
      - traefik.http.routers.${WS_HOST:-blastws}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST:-blastws}lb.rule=Host(`${WS_LB:-blastws-lb}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST:-blastws}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST:-blastws}.loadbalancer.server.port=${WS_PORT:-8546}
      - metrics.scrape=true
      - metrics.path=/debug/metrics/prometheus
      - metrics.port=6060

  bl-node:
    restart: "unless-stopped"
    build:
      context: ./bl-node
      dockerfile: Dockerfile.binary
      args:
        - NETWORK=${NETWORK}
    image: bl-node:${NETWORK}
    pull_policy: never
    stop_grace_period: 50s
    volumes:
      - blnode-data:/blast
      - jwtsecret:/blast/ee-secret
      - /etc/localtime:/etc/localtime:ro
    environment:
      - CL_EXTRAS=${CL_EXTRAS}
      - DEPLOY_TAG=${DEPLOY_TAG}
      - NETWORK=${NETWORK}
    ports:
      - ${NODE_P2P_PORT:-9003}:${NODE_P2P_PORT:-9003}/tcp
      - ${NODE_P2P_PORT:-9003}:${NODE_P2P_PORT:-9003}/udp
    <<: *logging
    entrypoint:
      - docker-entrypoint.sh
      - op-node
      - --l1
      - ${L1_RPC}
      - --l1.rpckind
      - ${L1_RPC_KIND:-basic}
      - --l2
      - http://bl-geth:8551
      - --l2.jwt-secret
      - /blast/ee-secret/jwtsecret
      - --rpc.addr
      - 0.0.0.0
      - --rpc.port
      - ${NODE_RPC_PORT:-9545}
      - --metrics.enabled
      - --p2p.listen.tcp
      - ${NODE_P2P_PORT:-9003}
      - --rollup.config
      - /blast/config/rollup.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.${NODE_HOST:-blastnode}.service=${NODE_HOST:-blastnode}
      - traefik.http.routers.${NODE_HOST:-blastnode}.entrypoints=websecure
      - traefik.http.routers.${NODE_HOST:-blastnode}.rule=Host(`${NODE_HOST:-blastnode}.${DOMAIN}`)
      - traefik.http.routers.${NODE_HOST:-blastnode}.tls.certresolver=letsencrypt
      - traefik.http.routers.${NODE_HOST:-blastnode}lb.service=${NODE_HOST:-blastnode}
      - traefik.http.routers.${NODE_HOST:-blastnode}lb.entrypoints=websecure
      - traefik.http.routers.${NODE_HOST:-blastnode}lb.rule=Host(`${NODE_LB:-blastnode-lb}.${DOMAIN}`)
      - traefik.http.routers.${NODE_HOST:-blastnode}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${NODE_HOST:-blastnode}.loadbalancer.server.port=${NODE_RPC_PORT:-9545}
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=7300

volumes:
  blgeth-data:
  blnode-data:
  jwtsecret:
